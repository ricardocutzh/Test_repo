jobs:
  - script: >
      freeStyleJob('seed-job') {
        triggers {
          hudsonStartupTrigger {
            quietPeriod("10")
            runOnChoice("ON_CONNECT")
            label("")
            nodeParameterName('master')
          }
        }
        scm {
          git {
            remote {
              url('https://github.com/ricardocutzh/Test_repo.git')
            }
            branches('master')
          }
        }
        displayName('seed-job')
        steps {
          sh "ls"
          sh "rm -rf /etc/casc/*"
          sh "ls -la /etc/casc"
          sh "cp ./casc/*.yaml /etc/casc/"
        }
        publishers {
          groovyPostBuild('''
          import jenkins.model.Jenkins
          import hudson.security.ACL
          import java.util.ArrayList
          import hudson.model.*;
          Jenkins.instance.doQuietDown()
          Thread.start {
            ACL.impersonate(ACL.SYSTEM)
            Thread.sleep(1 * 30 * 1000)
            def q = Jenkins.instance.queue
            for (queued in Jenkins.instance.queue.items) {
              println queued.task.name
              if (queued.task.name == 'General/seed_sharedlib'){
                println 'do nothing'
              }else{
                q.cancel(queued.task)
              }
            }
            Jenkins.instance.doCancelQuietDown()
          }
          ''', Behavior.DoNothing)
          groovyPostBuild('''
          import io.jenkins.plugins.casc.ConfigurationAsCode;
          ConfigurationAsCode.get().configure()
          ''', Behavior.DoNothing)
        }
      }
